[import]
sections = list: imp_emb

[imp_emb]
config_files = list:
  resource(zensols.deeplearn): resources/torch.conf,
  resource: resources/glove.conf

# config
[doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser

[glove_50_embedding]
lowercase = False

[embedding_layer]
class_name = zensols.deepnlp.WordEmbeddingLayer
embed_model = instance: glove_50_embedding
feature_vectorizer = instance: feature_vectorizer

[wordvec_sent_feature_vectorizer]
class_name = zensols.deepnlp.vectorize.WordVectorEmbeddingFeatureVectorizer
feature_id = wsv
encode_transformed = False
embed_model = instance: glove_50_embedding

# features
[feature_vectorizer]
class_name = zensols.deepnlp.vectorize.FeatureDocumentVectorizerManager
torch_config = instance: torch_config
configured_vectorizers = eval: 'wordvec_sent_feature_vectorizer'.split()
doc_parser = instance: doc_parser
token_length = 20

# network
[network_model_settings]
class_name = zensols.deeplearn.NetworkModelSettings
model_path_format = x
results_path_format = x
net_class = eval: int
learning_rate = 0.001
epochs = 10
