[default]
corpus_dir = ./corpus
#data_dir = ./data
#document_data_dir = ${data_dir}/document


# config
[langres]
class_name = zensols.nlp.LanguageResource

[doc_parser]
class_name = zensols.deepnlp.FeatureDocumentParser
langres = instance: langres

[torch_config]
class_name = zensols.deeplearn.TorchConfig
use_gpu = False
data_type = eval({'import': ['torch']}): torch.float64


# embedding
[glove_embedding]
class_name = zensols.deepnlp.GloveWordEmbedModel
path = path: ${default:corpus_dir}/glove
desc = 6B
dimension = 50

[embedding_layer]
class_name = zensols.deepnlp.WordEmbeddingLayer
embed_model = instance: glove_embedding
feature_vectorizer = instance: feature_vectorizer

[wordvec_sent_feature_vectorizer]
class_name = zensols.deepnlp.WordVectorSentenceFeatureVectorizer
layer = instance: embedding_layer
feature_type = wsv


# features
[feature_vectorizer]
class_name = zensols.deepnlp.TokenContainerFeatureVectorizerManager
torch_config = instance: torch_config
configured_vectorizers = eval: 'wordvec_sent_feature_vectorizer'.split()
module_vectorizers = None
langres = instance: langres
doc_parser = instance: doc_parser
token_length = 20

# network
[network_model_settings]
class_name = zensols.deeplearn.NetworkModelSettings
model_path_format = x
results_path_format = x
net_class = eval: int
learning_rate = 0.001
epochs = 10
