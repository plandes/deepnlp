## resources/download model
#
[fasttext_news_300_resource]
class_name = zensols.install.Resource
url = https://dl.fbaipublicfiles.com/fasttext/vectors-english/wiki-news-300d-1M.vec.zip
name = None
clean_up = False

[fasttext_crawl_300_resource]
class_name = zensols.install.Resource
url = https://dl.fbaipublicfiles.com/fasttext/vectors-english/crawl-300d-2M.vec.zip
name = None
clean_up = False

[fasttext_installer]
class_name = zensols.install.Installer
downloader = object: zensols.install.Downloader
package_resource = zensols.deepnlp
resources = instance: list: fasttext_news_300_resource, fasttext_crawl_300_resource


## embedding
#
## fasttext news 300 dim
[fasttext_news_300_embedding]
class_name = zensols.deepnlp.embed.FastTextEmbedModel
installer = instance: fasttext_installer
resource = instance: fasttext_news_300_resource
desc = 1M
dimension = 300
corpus = news
lowercase = False

[fasttext_news_300_feature_vectorizer]
class_name = zensols.deepnlp.vectorize.WordVectorEmbeddingFeatureVectorizer
feature_id = wvftnews300
# encode at the (feature) document level
fold_method = concat_tokens
# the word embedding model
embed_model = instance: fasttext_news_300_embedding
# do not serialize (pickle) the decoded output to do the work up front
encode_transformed = ${deepnlp_default:fasttext_encode_transformed}

[fasttext_news_300_embedding_layer]
class_name = zensols.deepnlp.layer.WordVectorEmbeddingLayer
embed_model = instance: fasttext_news_300_embedding
feature_vectorizer_manager = instance: language_vectorizer_manager
# freeze the embedding to train faster
trainable = ${deepnlp_default:fasttext_trainable}


## fasttext crawl 300 dim
[fasttext_crawl_300_embedding]
class_name = zensols.deepnlp.embed.FastTextEmbedModel
installer = instance: fasttext_installer
resource = instance: fasttext_crawl_300_resource
desc = 2M
dimension = 300
corpus = crawl
lowercase = False

[fasttext_crawl_300_feature_vectorizer]
class_name = zensols.deepnlp.vectorize.WordVectorEmbeddingFeatureVectorizer
feature_id = wvftcrawl300
# encode at the (feature) document level
fold_method = concat_tokens
# the word embedding model
embed_model = instance: fasttext_crawl_300_embedding
# do not serialize (pickle) the decoded output to do the work up front
encode_transformed = ${deepnlp_default:fasttext_encode_transformed}

[fasttext_crawl_300_embedding_layer]
class_name = zensols.deepnlp.layer.WordVectorEmbeddingLayer
embed_model = instance: fasttext_crawl_300_embedding
feature_vectorizer_manager = instance: language_vectorizer_manager
# freeze the embedding to train faster
trainable = ${deepnlp_default:fasttext_trainable}
