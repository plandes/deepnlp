## Transformer expanders; this must be imported after `transformers.conf`

## Import mappings
[import]
sections = list: imp_trans_expander

[imp_trans_expander]
type = import
config_file = resource(zensols.deepnlp): resources/transformer-expander.yml


## Expanders
#
# expanders only works with embeddings utilizing all token level outputs
[transformer_fixed_embedding]
# uncomment to use the last layer (rather than the CLS token) as output
output = last_hidden_state

# dependency tree
[transformer_dep_expander_vectorizer]
class_name = zensols.deepnlp.transformer.TransformerExpanderFeatureVectorizer
feature_id = tran_dep_expander
# encode at the (feature) document level
fold_method = concat_tokens
# the word embedding model
embed_model = instance: transformer_fixed_embedding
delegate_feature_ids = list: language_vectorizer_manager.dep
encode_transformed = False

# vectorized enumerated spaCy features
[transformer_enum_expander_vectorizer]
class_name = zensols.deepnlp.transformer.TransformerExpanderFeatureVectorizer
feature_id = tran_enum_expander
# encode at the (feature) document level
fold_method = concat_tokens
# the word embedding model
embed_model = instance: transformer_fixed_embedding
delegate_feature_ids = list: language_vectorizer_manager.enum
# serialize (pickle) the decoded output to do the work up front
encode_transformed = False


## Vectorizer and managers
#
# a language specific vectorizer manager that uses the FeatureDocumentParser
# defined in `doc_parser` to create word embeddings using the vectorizer
# defined in `glove_50_feature_vectorizer` and natural language features
[transformer_expander_feature_manager]
class_name = zensols.deepnlp.vectorize.FeatureDocumentVectorizerManager
torch_config = instance: gpu_torch_config
doc_parser = instance: doc_parser
# do not truncate tokens
token_length = -1
configured_vectorizers = list:
  transformer_dep_expander_vectorizer,
  transformer_enum_expander_vectorizer


# maintains a collection of all vectorizers for the framework
[vectorizer_manager_set]
names = list: language_vectorizer_manager, transformer_expander_feature_manager
