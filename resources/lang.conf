## Features and vectorization

# vectorize the labels from text to PyTorch tensors
[label_vectorizer]
class_name = zensols.deeplearn.vectorize.NominalEncodedEncodableFeatureVectorizer
#--config note: uncomment, but be careful not to inclue a ``list:``
#categories = y, n
feature_id = lblabel

# the vectorizer for labels is not language specific and lives in the
# zensols.deeplearn.vectorize package, so it needs it's own instance
[label_vectorizer_manager]
class_name = zensols.deeplearn.vectorize.FeatureVectorizerManager
torch_config = instance: torch_config
configured_vectorizers = eval: 'label_vectorizer'.split()

# maintains a collection of all vectorizers for the framework
[vectorizer_manager_set]
class_name = zensols.deeplearn.vectorize.FeatureVectorizerManagerSet
names = eval: 'language_feature_manager label_vectorizer_manager'.split()


## manager

# a language specific vectorizer manager that uses the FeatureDocumentParser
# defined in `doc_parser` to create word embeddings using the vectorizer
# defined in `glove_50_feature_vectorizer` and natural language features
[language_feature_manager]
class_name = zensols.deepnlp.vectorize.FeatureDocumentVectorizerManager
torch_config = instance: gpu_torch_config
doc_parser = instance: doc_parser
# do not truncate tokens
token_length = -1
configured_vectorizers = list:
  count_feature_vectorizer,
  enum_feature_vectorizer,
  stats_feature_vectorizer,
  depth_token_feature_vectorizer,
  glove_50_feature_vectorizer,
  transformer_feature_vectorizer
