[cli]
class_name = zensols.cli.ActionCliManager
apps = list: pkg_cli, log_cli, config_cli, list_actions_cli, export_env_cli,
     fac_info_app, fac_model_app, app

[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = ${package:name}
format = %%(asctime)-15s [%%(name)s] %%(message)s

[pkg_cli]
class_name = zensols.cli.PackageInfoImporter

[config_cli]
class_name = zensols.cli.ConfigurationImporter
override = True

[list_actions_cli]
class_name = zensols.cli.ListActions

[override_cli]
class_name = zensols.cli.ConfigurationOverrider

[resources]
path = ${env:root_dir}/resources

[import]
references = resources, config_cli
sections = imp_main, imp_corpus, imp_lang, imp_emb, imp_vec, imp_batch, imp_model

[imp_main]
config_file = ${resources:path}/main.conf

[imp_corpus]
config_file = ${resources:path}/corpus.conf

[imp_batch]
type = ini
config_file = ${resources:path}/batch.conf

[imp_emb]
type = ini
config_file = ${resources:path}/embedding.conf

[imp_lang]
type = ini
config_file = ${resources:path}/lang.conf

[imp_vec]
# this has to be an INI for the dollar signs ($) in the configuration
type = ini
config_file = ${resources:path}/vectorizer.conf

[imp_model]
type = ini
config_file = ${resources:path}/model.conf

[export_env_cli]
class_name = zensols.cli.ExportEnvironment
section = export_vars

[facade]
class_name = movie.ReviewModelFacade

[fac_info_app]
class_name = zensols.deeplearn.cli.FacadeInfoApplication
#config_factory_args = dict: {'reload_pattern': '^zensols.deepnlp.*'}

[fac_model_app]
class_name = zensols.deeplearn.cli.FacadeModelApplication

[app]
class_name = zensols.deeplearn.cli.FacadeApplication
#config_factory_args = dict: {'reload_pattern': '^zensols.deepnlp.transformer.*'}

[app_decorator]
class_name = zensols.cli.ActionCli
option_includes = eval: set()
