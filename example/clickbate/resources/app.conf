# specify file system paths used by the application relative to a given root by
# `run.py`
[default]
root_dir = ${appenv:root_dir}
resources_dir = ${root_dir}/resources
temporary_dir = ${root_dir}/target
corpus_dir = ${root_dir}/corpus
data_dir = ${root_dir}/data

# this section defines what applications to provide for the command line
# application
[cli]
class_name = zensols.cli.ActionCliManager
apps = list: log_cli, config_cli, list_actions_cli,
    fac_info_app, fac_model_app, fac_model_nlp_app

# configure logging with the `cb` module as debug, which is the only module
# that has code for this application
[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = cb
level = debug

# configure to take extra configuration in a file specified with `--config`
[config_cli]
class_name = zensols.cli.ConfigurationImporter
override = True

# provide a list of actions and their documentation in more detail than just
# the help application
[list_actions_cli]
class_name = zensols.cli.ListActions

# import the `imp_conf` section, but make the `default` section available as
# configuration during processing of other files' configuration properties
[import]
references = default
sections = imp_conf

# import overrides, resource libraries, and configuration to create features
# from parse natural language text
[imp_conf]
type = importini
config_files = list:
    resource(zensols.deeplearn): resources/obj.conf,
    resource(zensols.deepnlp): resources/obj.conf,
    ${default:resources_dir}/feature.conf,
    ${default:resources_dir}/default.conf

# application to provide information about the model
[fac_info_app]
class_name = zensols.deeplearn.cli.FacadeInfoApplication

# application to provide training, testing and other functionality to excercise
# the model
[fac_model_nlp_app]
class_name = zensols.deeplearn.cli.FacadeModelApplication

# application to provide NLP specific funtionality such as text prediction
# (classification for our example)
[fac_model_app]
class_name = zensols.deepnlp.cli.NLPFacadeModelApplication
