# app defaults
[sp_default]
lang_features = dependencies, enums, stats, counts,
embedding = ${name}_embedding

# deeplearning package defaults
[deeplearn_default]
model_name = ${sp_default:embedding}

# command line applications and sections to delete after load
[cli]
apps = list: ${cli_config_default:apps}, ${cli_deeplearn_default:apps}, ${cli_deepnlp_default:apps}, deepnlp_fac_text_classify_app, cleaner_cli
cleanups = list: ${cli_config_default:cleanups}, ${cli_deeplearn_default:cleanups}, ${cli_deepnlp_default:cleanups}, deepnlp_fac_text_classify_app, cleaner_cli
cleanup_removes = set: log_cli

# set the default embeddding
[override_cli_decorator]
option_overrides = dict: {'override': {'default': 'sp_default.name=glove_50'}}

# set the default clean level to remove everything but the downloaded corpus
[cleaner_cli_decorator]
option_overrides = dict: {'clean_level': {'default': 1}}

# configuration files are optional
[config_cli]
expect = False

# import command line apps
[import]
config_files = list:
    resource(zensols.util): resources/default.conf,
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf,
    resource(zensols.util): resources/cleaner.conf,
    resource(zensols.deeplearn): resources/cli.conf,
    resource(zensols.deepnlp): resources/cli.conf,
    resource(zensols.deepnlp): resources/cleaner.conf

# import the `imp_conf` while leaving default and escape sections available to
# the remainder of the config loading process
[config_import]
references = list: default, sp_default, conf_esc
sections = list: app_imp_conf

# import default overrides, DL/NLP, and project resource library loads
[app_imp_conf]
type = import
config_files = list:
    ^{override},
    ^{config_path},
    resource(zensols.deeplearn): resources/default.conf,
    resource(zensols.deepnlp): resources/default.conf,
    resource(zensols.deeplearn): resources/obj.conf,
    resource(zensols.deeplearn): resources/observer.conf,
    resource(zensols.nlp): resources/obj.conf,
    resource(zensols.nlp): resources/component.conf,
    resource(zensols.deepnlp): resources/obj.conf,
    resource(zensols.deepnlp): resources/classify.conf,
    resource(zensols.deepnlp): resources/feature.conf,
    resource(sp): resources/obj.yml,
    ^{config_path}
