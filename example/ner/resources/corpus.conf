## corpus parsing

[corpus_defaults]
corpus_split_names = eval: ['train', 'dev', 'test']

[sent_dir_stash]
class_name = zensols.persist.DirectoryStash
path = path: ${default:corpus_data_dir}/parsed

# creates files of key IDs for each split
[sent_factory_stash]
class_name = ner.SentenceFactoryStash
delegate = instance: sent_dir_stash
corpus_split_names = ${corpus_defaults:corpus_split_names}
key_path = path: ${default:corpus_data_dir}/key
pattern = {name}.dat
source_path = path: ${default:connl_dir}

[sent_stash]
class_name = zensols.dataset.SortedDatasetSplitStash
delegate = instance: sent_factory_stash
split_container = instance: sent_factory_stash
sort_function = eval: int

[sent_stats]
class_name = ner.SentenceStats
stash = instance: sent_stash
path = path: ${default:corpus_data_dir}/stats.dat

# create data points from the client
[feature_prediction_mapper]
class_name = ner.NERPredictionMapper
vec_manager = instance: language_feature_manager
label_feature_id = label_vectorizer_manager.entlabel1
