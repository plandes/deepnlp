## named entity recognition (NER) demo configuration file
#
# This file contains the configuration needed to set up all in memory classes
# to train, validate and test a deep learning model


## Basic configuration
[default]
root_dir = ${env:root_dir}
temporary_dir = ${root_dir}/target
corpus_dir = ${root_dir}/corpus
data_dir = ${root_dir}/data
corpus_data_dir = ${data_dir}/corpus
batch_data_dir = ${data_dir}/batch
results_dir = ${temporary_dir}/results
connl_dir = ${corpus_dir}/connl-2003
glove_dir = ${default:corpus_dir}/glove
stanford_dir = ${corpus_dir}/stanfordSentimentTreebank
cornell_dir = ${corpus_dir}/rt-polaritydata
w2v_path = ${default:corpus_dir}/word2vec/GoogleNews-vectors-negative300.bin

## environment vars to export
[export_vars]
corpus_dir = ${default:corpus_dir}
results_dir = ${default:results_dir}
connl_dir = ${default:connl_dir}
data_dir = ${default:data_dir}
glove_dir = ${default:glove_dir}
stanford_dir = ${default:stanford_dir}
cornell_dir = ${default:cornell_dir}
w2v_path = ${default:w2v_path}


## PyTorch configuration indicates where to use the GPU vs CPU and default
## types

[gpu_settings]
precision = 64
primary_index = ${env:gpu_primary_index}

# CPU based configuration
[torch_config]
class_name = zensols.deeplearn.TorchConfig
use_gpu = False
data_type = eval({'import': ['torch']}): torch.float${gpu_settings:precision}

# GPU based configuration
[gpu_torch_config]
class_name = zensols.deeplearn.TorchConfig
use_gpu = True
data_type = eval({'import': ['torch']}): torch.float${gpu_settings:precision}
cuda_device_index = ${gpu_settings:primary_index}


## Model defaults across multiple layers

[model_defaults]
activation = None
dropout = 0.1

[label_constants]
n_labels = eval: len((${category_settings:ent}))
