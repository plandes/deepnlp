[cli]
class_name = zensols.cli.ActionCliManager
apps = list: pkg_cli, log_cli, list_actions_cli, override_cli, export_env_cli,
     fac_info_app, fac_model_app, app

[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = ${package:name}
format = %%(asctime)-15s [%%(name)s] %%(message)s

[pkg_cli]
class_name = zensols.cli.PackageInfoImporter

[list_actions_cli]
class_name = zensols.cli.ListActions

[override_cli]
class_name = zensols.cli.ConfigurationOverrider

[resources]
path = ${env:root_dir}/resources

[import]
references = resources
files = ${resources:path}/main.conf,
    ${resources:path}/corpus.conf,
    ${resources:path}/lang.conf,
    ${resources:path}/batch.conf,
    ${resources:path}/embedding.conf
sections = imp_vec, imp_model

[imp_vec]
# this has to be an INI for the dollar signs ($) in the configuration
type = ini
config_file = ${resources:path}/vectorizer.conf

[imp_model]
type = ini
config_file = ${resources:path}/model.conf

[export_env_cli]
class_name = zensols.cli.ExportEnvironment
section = export_vars

[facade]
class_name = ner.NERModelFacade
sent_stats = instance: sent_stats

[fac_info_app]
class_name = zensols.deeplearn.cli.FacadeInfoApplication
config_factory_args = dict: {'reload_pattern': '^zensols.deepnlp.*'}

[fac_model_app]
class_name = zensols.deeplearn.cli.FacadeModelApplication

[app]
class_name = ner.NERFacadeApplication
config_factory_args = dict: {'reload_pattern': '^zensols.deepnlp.transformer.*'}

[app_decorator]
class_name = zensols.cli.ActionCli
option_includes = eval: set()
